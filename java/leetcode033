public class leetcode033 {
 public class TreeLinkNode {
      int val;
      TreeLinkNode left, right, next;
      TreeLinkNode(int x) { val = x; }
  }
  //继续思考"Populating Next Right Pointers in Each Node".这道题
  //如果给定的树可以是任意的二叉树呢?你之前的给出的算法还有效吗?
  //注意：
  //你只能使用常量的额外内存空间

    //借鉴的牛客网其他人的解法超牛逼！！！
    public void connect(TreeLinkNode root) {
       TreeLinkNode dummy=new TreeLinkNode(-1);
       while(root!=null){
           TreeLinkNode prev=dummy;dummy.next=null;
           for(TreeLinkNode p=root;p!=null;p=p.next){
               if(p.left!=null){
                   prev.next=p.left;
                   prev=prev.next;
               }
               if(p.right!=null){
                   prev.next=p.right;
                   prev=prev.next;
               }
           }
           root=dummy.next;
       }
    }
}
