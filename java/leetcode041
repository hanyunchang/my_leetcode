import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedList;
import java.util.Queue;

public class leetcode041 {
    public class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;
        TreeNode(int x) { val = x; }
    }

    public ArrayList<ArrayList<Integer>> levelOrderBottom(TreeNode root) {
        Queue<TreeNode> queue=new LinkedList<>();
        ArrayList<ArrayList<Integer>> res=new ArrayList<>();
        if(root!=null) queue.offer(root);
        while(queue.isEmpty()==false){
            int size=queue.size();
            ArrayList<Integer> tmp=new ArrayList<>();
            while (size>0){
                TreeNode node=queue.poll();
                tmp.add(node.val);
                size--;
                if(node.left!=null) queue.offer(node.left);
                if(node.right!=null) queue.offer(node.right);
            }
            res.add(tmp);
        }
        Collections.reverse(res);
        return res;
    }
}
